
variables:
  aqt_version: 0.3.1
  qtversion: 5.12.1
  pydepends: requests six libarchive flake8 wheel twine

jobs:
- job: Ubuntu_1604_py3
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.6'
      architecture: 'x64'
  - script: |
      python -m pip install $(pydepends)
      flake8 aqt bin
    displayName: 'Run lint tests'
  - script: |
      sudo apt-get update
      sudo apt-get -y install p7zip
  - task: PythonScript@0
    inputs:
      scriptSource: filePath
      scriptPath: $(Build.SourcesDirectory)/setup.py
      arguments: sdist bdist_wheel
      workingDirectory: $(Build.SourcesDirectory)
    displayName: build package
  - script: pip install $(Build.SourcesDirectory)/dist/aqtinstall-$(aqt_version)-py2.py3-none-any.whl
    displayName: install package
  - task: PythonScript@0
    inputs:
      scriptSource: filePath
      scriptPath: $(Build.SourcesDirectory)/bin/aqt
      arguments: install $(qtversion) linux desktop
      workingDirectory: $(Build.BinariesDirectory)
    displayName: install qt
  - script: |
      $(Build.BinariesDirectory)/Qt$(qtversion)/$(qtversion)/gcc_64/bin/qmake $(Build.SourcesDirectory)/tests
      make

- job: Ubuntu_1604_py2
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '2.7'
      architecture: 'x64'
  - script: |
      sudo apt-get update
      sudo apt-get -y install p7zip
      python -m pip install $(pydepends)
  - task: PythonScript@0
    inputs:
      scriptSource: filePath
      scriptPath: $(Build.SourcesDirectory)/setup.py
      arguments: sdist bdist_wheel
      workingDirectory: $(Build.SourcesDirectory)
    displayName: build package
  - script: pip install $(Build.SourcesDirectory)/dist/aqtinstall-$(aqt_version)-py2.py3-none-any.whl
    displayName: install package
  - task: PythonScript@0
    inputs:
      scriptSource: filePath
      scriptPath: $(Build.SourcesDirectory)/bin/aqt
      arguments: install $(qtversion) linux desktop
      workingDirectory: $(Build.BinariesDirectory)
    displayName: install qt
  - script: |
      $(Build.BinariesDirectory)/Qt$(qtversion)/$(qtversion)/gcc_64/bin/qmake $(Build.SourcesDirectory)/tests
      make
  - script: ls -lR $(Build.BinariesDirectory)
  
- job: macOS
  pool:
    vmImage: 'macOS-10.13'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.6'
      architecture: 'x64'
  - script: |
      brew install p7zip
      python -m pip install $(pydepends)
  - task: PythonScript@0
    inputs:
      scriptSource: filePath
      scriptPath: $(Build.SourcesDirectory)/setup.py
      arguments: sdist bdist_wheel
      workingDirectory: $(Build.SourcesDirectory)
    displayName: build package
  - script: pip install $(Build.SourcesDirectory)/dist/aqtinstall-$(aqt_version)-py2.py3-none-any.whl
    displayName: install package
  - task: PythonScript@0
    inputs:
      scriptSource: filePath
      scriptPath: $(Build.SourcesDirectory)/bin/aqt
      arguments: install $(qtversion) mac desktop
      workingDirectory: $(Build.BinariesDirectory)
    displayName: install qt
  - script: |
      $(Build.BinariesDirectory)/Qt$(qtversion)/$(qtversion)/clang_64/bin/qmake $(Build.SourcesDirectory)/tests
      make
  - script: ls -lR $(Build.BinariesDirectory)

- job: Windows
  pool:
    vmImage: 'vs2017-win2016'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.6'
      architecture: 'x64'
  - script: |
      cinst -y 7zip
      python -m pip install $(pydepends)
  - task: PythonScript@0
    inputs:
      scriptSource: filePath
      scriptPath: $(Build.SourcesDirectory)/setup.py
      arguments: sdist bdist_wheel
      workingDirectory: $(Build.SourcesDirectory)
    displayName: build package
  - script: pip install $(Build.SourcesDirectory)/dist/aqtinstall-$(aqt_version)-py2.py3-none-any.whl
    displayName: install package
  - task: PythonScript@0
    inputs:
      scriptSource: filePath
      scriptPath: $(Build.SourcesDirectory)/bin/aqt
      arguments: install $(qtversion) windows desktop win64_msvc2017_64
      workingDirectory: $(Build.BinariesDirectory)
    displayName: install qt
  - script: ls -lR $(Build.BinariesDirectory)
